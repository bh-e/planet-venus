Description: Adjust to html5lib 0.999
 There are several changes in html5lib (and feedparser) that need some
 adaptations (tested to comply with the test suite mainly).
 --
 edit: A patch from #845987 is incorporated along with this patch. Thanks
 to Jakob Haufe <sur5r@sur5r.net>.  

Date: 2018-01-06
Author: Olivier Berger <obergix@debian.org>, 
        Abhijith PA <abhijith@hacari.org>

Index: planet-venus-0~git9de2109/planet/scrub.py
===================================================================
--- planet-venus-0~git9de2109.orig/planet/scrub.py
+++ planet-venus-0~git9de2109/planet/scrub.py
@@ -128,24 +128,23 @@ def scrub(feed_uri, data):
                 node['value'] = feedparser._resolveRelativeURIs(
                     node.value, node.base, 'utf-8', node.type)
 
-            # Run this through HTML5's sanitizer
-            doc = None
-            if 'xhtml' in node['type']:
-              try:
-                from xml.dom import minidom
-                doc = minidom.parseString(node['value'])
-              except:
-                node['type']='text/html'
+            if node['value']:
+                # Run this through HTML5's sanitizer
+                doc = None
+                if 'xhtml' in node['type']:
+                    try:
+                        from xml.dom import minidom
+                        doc = minidom.parseString(node['value'])
+                    except:
+                        node['type']='text/html'
 
-            if not doc:
-              from html5lib import html5parser, treebuilders
-              p=html5parser.HTMLParser(tree=treebuilders.getTreeBuilder('dom'))
-              doc = p.parseFragment(node['value'], encoding='utf-8')
+                if not doc:
+                    from html5lib import html5parser, treebuilders
+                    p=html5parser.HTMLParser(tree=treebuilders.getTreeBuilder('dom'))
+                    doc = p.parseFragment(node['value'])
 
-            from html5lib import treewalkers, serializer
-            from html5lib.filters import sanitizer
-            walker = sanitizer.Filter(treewalkers.getTreeWalker('dom')(doc))
-            xhtml = serializer.XHTMLSerializer(inject_meta_charset = False)
-            tree = xhtml.serialize(walker, encoding='utf-8')
-
-            node['value'] = ''.join([str(token) for token in tree])
+                from html5lib import treewalkers, serializer
+                walker = treewalkers.getTreeWalker('dom')(doc)
+                xhtml = serializer.HTMLSerializer(inject_meta_charset = False, sanitize=True)
+                tree = xhtml.serialize(walker, encoding='utf-8')
+                node['value'] = ''.join([str(token) for token in tree])
Index: planet-venus-0~git9de2109/planet/reconstitute.py
===================================================================
--- planet-venus-0~git9de2109.orig/planet/reconstitute.py
+++ planet-venus-0~git9de2109/planet/reconstitute.py
@@ -16,8 +16,7 @@ Todo:
 import re, time, sgmllib
 from xml.sax.saxutils import escape
 from xml.dom import minidom, Node
-from html5lib import html5parser
-from html5lib.treebuilders import dom
+from html5lib import html5parser, treebuilders
 import planet, config
 
 try:
@@ -168,8 +167,8 @@ def content(xentry, name, detail, bozo):
             bozo=1
 
     if detail.type.find('xhtml')<0 or bozo:
-        parser = html5parser.HTMLParser(tree=dom.TreeBuilder)
-        html = parser.parse(xdiv % detail.value, encoding="utf-8")
+        parser = html5parser.HTMLParser(tree=treebuilders.getTreeBuilder('dom'))
+        html = parser.parse(xdiv % detail.value, override_encoding="utf-8")
         for body in html.documentElement.childNodes:
             if body.nodeType != Node.ELEMENT_NODE: continue
             if body.nodeName != 'body': continue
Index: planet-venus-0~git9de2109/filters/html2xhtml.plugin
===================================================================
--- planet-venus-0~git9de2109.orig/filters/html2xhtml.plugin
+++ planet-venus-0~git9de2109/filters/html2xhtml.plugin
@@ -1,6 +1,6 @@
 import sys
 import html5lib
-tree=html5lib.treebuilders.dom.TreeBuilder
+tree=html5lib.treebuilders.getTreeBuilder('dom')
 parser = html5lib.html5parser.HTMLParser(tree=tree)
 document = parser.parse(sys.stdin)
 sys.stdout.write(document.toxml("utf-8"))
